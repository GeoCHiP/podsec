#!/bin/sh

cmd=$1
shift
controlPlane=
token=
caCertHash=
case $cmd in
  init)
    if [ "$#" -gt 0 ]
    then
      echo -ne "Лишние параметры $*\nФормат вызова: \n$0 init\n";
      exit
    fi
    controlPlane="initMaster"
    ;;
  join)
    if [ $# -eq 0 ]
    then
      echo -ne "Отсутствуют параметры\nФормат вызова: \n$0 init|join <параметры>\n";
      exit 1
    fi
    apiServer=$1
    shift
    while [ $# -gt 0 ]
    do
      par=$1
      if [ "${par:0:2}" != '--' ]
      then
        echo "Отсутствуют '--' у параметра $par в параметрах $**"
        exit 1
      fi
      par=${par:2}
      case $par in
        'control-plane')
          controlPlane="master"
          shift
          ;;
        'token')
          token=$2
          shift;shift
          ;;
        'discovery-token-ca-cert-hash')
          caCertHash=$2
          shift;shift
          ;;
        *)
          echo "Неизвестный параметр $par";
          exit 1
          ;;
      esac
    done
    if [ -z "$token" ]
    then
      echo "В операции join отсутствуют флаг token";
      exit 1
    fi
    if [ -z "$caCertHash" ]
    then
      echo "В операции join отсутствуют флаг discovery-token-ca-cert-hash";
      exit 1
    fi
    ;;
  *)
    echo -ne "Формат вызова: \n$0 init|join <параметры>\n";
    exit 1;
esac

uid=`id -u u7s-admin`
cp ~u7s-admin/.config/usernetes/ENV ~u7s-admin/.config/usernetes/env
echo  "
export U7S_UID=$uid
export U7S_CONTROLPLANE=$controlPlane
export U7S_APISERVER=$apiServer
export U7S_TOKEN=$token
export U7S_CACERTHASH=$caCertHash" >> ~u7s-admin/.config/usernetes/env

. podsec-u7s-functions

# Данные команды будут удалены после установки соответсвующих прав в пакетах

# kubernetes-common
chmod 775 /etc/kubernetes
chgrp kube /etc/kubernetes

# kubernetes-kubelet
chmod 775 /etc/kubernetes/manifests/
chgrp kube /etc/kubernetes/manifests/
###############################

echo -ne    "tun
tap
bridge
br_netfilter
veth
ip6_tables
iptable_nat
ip6table_nat
iptable_filter
ip6table_filter
nf_tables
xt_MASQUERADE
xt_addrtype
xt_comment
xt_conntrack
xt_mark
xt_multiport
xt_nat
xt_tcpudp
" > /etc/modules-load.d/u7s.conf
modprobe -a $(cat /etc/modules-load.d/u7s.conf)

if ! /bin/grep u7s-admin /etc/subuid
then
  # Сформровать /etc/subuid, /etc/subgid для системного user путем временного создания обчного пользователя
  /usr/sbin/useradd -M u7s_admin_temp
  /bin/sed -e 's/u7s_admin_temp/u7s-admin/' -i /etc/subuid
  /bin/sed -e 's/u7s_admin_temp/u7s-admin/' -i /etc/subgid
  /usr/sbin/userdel u7s_admin_temp
fi

mkdir -p /var/lib/crio/
# chown u7s-admin:u7s-admin /var/lib/crio/
# mkdir -p /usr/libexec/kubernetes;
# chown u7s-admin:u7s-admin /usr/libexec/kubernetes

# config_dir=/var/lib/u7s-admin/.config
# mkdir -p $config_dir
# chown u7s-admin:u7s-admin -R ~u7s-admin
# chown u7s-admin:u7s-admin -R ~u7s-admin

# Чистим предыдещий конфиг kuber
rm -f /etc/kubernetes/*

# cd ~u7s-admin/usernetes/boot

# mkdir -p /run/crio/
# /bin/ln -sf /run/user/${uid}/usernetes/crio/crio.sock  /run/crio/crio.sock
# chown u7s-admin:u7s-admin /run/crio/

# sed -i -e 's/^PartOf=u7s.target/# PartOf=u7s.target/' ~u7s-admin/.config/systemd/user/rootlesskit.service
if ! machinectl shell u7s-admin@ /bin/sh -x ~u7s-admin/usernetes/boot/kubeadm.sh $cmd #$apiServer "$token" "$caCertHash" $controlPlane
then
  echo "Разворачивание кластера закончилось неудачно.
  Посмотрите в пользователе u7s-admin статус командой 'systemctl --user u7s.target' и системные логи командами journalctl"
  patree -pal
  exit 1
fi

# sed -i -e 's/.*PartOf=u7s.target/PartOf=u7s.target/' ~u7s-admin/.config/systemd/user/rootlesskit.service

if [ -z "$controlPlane" ] # WORKER node
then
  exit 0
fi

adminConf="/etc/kubernetes/admin.conf"
tmpConf="/tmp/admin.conf"

machinectl shell u7s-admin@ ~u7s-admin/usernetes/boot/nsenter.sh cp $adminConf $tmpConf

if [ ! -s $tmpConf ]
then
  echo "Конфигурацонный файл администратора кластера не сформирован!"
  exit 2
fi

cp $tmpConf $adminConf

mkdir -p /root/.kube/
chmod 700 /root/.kube/
cp -f $tmpConf /root/.kube/config
chmod 600 /root/.kube/config

mkdir -p ~u7s-admin/.kube/
cp -f $tmpConf ~u7s-admin/.kube/config
chmod 600 ~u7s-admin/.kube/config
chmod 700 ~u7s-admin/.kube/
chown -R u7s-admin:u7s-admin ~u7s-admin/.kube

rm -f $tmpConf

machinectl shell u7s-admin@ /sbin/systemctl --user enable u7s.target
machinectl shell u7s-admin@ /sbin/systemctl --user start u7s.target
/sbin/systemctl enable --now u7s.service
